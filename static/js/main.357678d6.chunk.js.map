{"version":3,"sources":["Card.js","App.js","index.js"],"names":["Card","card","handleSelect","disabled","flipped","className","src","alt","id","onClick","cardImage","matched","App","useState","cards","setCards","steps","setSteps","selectedOne","setSelectedOne","selectedTwo","setSelectedTwo","setDisabled","shuffelCards","shuffledCards","sort","Math","random","map","console","log","useEffect","resetTurn","setTimeout","prevSteps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQAEe,SAASA,EAAT,GAAyD,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,aAAcC,EAAoB,EAApBA,SAAUC,EAAU,EAAVA,QAQzD,OACI,qBAAKC,UAAU,OAAf,SACG,sBAAKA,UAAWD,EAAU,UAAY,GAAtC,UACG,qBAAKC,UAAU,QAAQC,IAAKL,EAAKK,IAAKC,IAAG,4BAAuBN,EAAKO,MACrE,qBAAKH,UAAU,OAAOC,IAAI,sBAAsBC,IAAI,QAAQE,QAVlD,WACZN,GACAD,EAAaD,W,UCFnBS,EAAY,CAChB,CAAE,IAAO,gBAAiBC,SAAS,GACnC,CAAE,IAAO,gBAAiBA,SAAS,GACnC,CAAE,IAAO,gBAAiBA,SAAS,GACnC,CAAE,IAAO,gBAAiBA,SAAS,GACnC,CAAE,IAAO,gBAAiBA,SAAS,GACnC,CAAE,IAAO,gBAAiBA,SAAS,IA6FtBC,MA1Ff,WAEE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAsCJ,mBAAS,MAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAAsCN,mBAAS,MAA/C,mBAAOO,EAAP,KAAoBC,EAApB,KACA,EAAgCR,oBAAS,GAAzC,mBAAOV,EAAP,KAAiBmB,EAAjB,KAGMC,EAAe,WACnB,IAAMC,EAAgB,UAAId,EAAcA,GACrCe,MAAK,kBAAMC,KAAKC,SAAW,MAC3BC,KAAI,SAAA3B,GAAI,kCAAUA,GAAV,IAAgBO,GAAIkB,KAAKC,cAEpCR,EAAe,MACfE,EAAe,MACfN,EAASS,GACTP,EAAS,IAGLf,EAAe,SAACD,GACpB4B,QAAQC,IAAI7B,GACZiB,EAAcG,EAAepB,GAAQkB,EAAelB,IAItD8B,qBAAU,WAEJb,GAAeE,IACfE,GAAY,GAERJ,EAAYZ,MAAQc,EAAYd,KAClCY,EAAYP,SAAU,EACtBS,EAAYT,SAAU,EACtBI,EAASD,GACTkB,KAEEC,YAAW,kBAAMD,MAAa,QAGrC,CAACd,EAAaE,EAAaN,IAG9B,IAAMkB,EAAY,WAChBb,EAAe,MACfE,EAAe,MACfJ,GAAS,SAAAiB,GAAS,OAAIA,EAAY,KAClCZ,GAAY,IAQd,OAJAS,qBAAU,WACRR,MACC,IAGD,sBAAKlB,UAAU,MAAf,UAEE,mCACE,6CACA,sDAGF,qBAAKA,UAAU,OAAf,SACE,qBAAKA,UAAU,QAAf,SACGS,EAAMc,KAAI,SAAA3B,GAAI,OACb,cAAC,EAAD,CAEAA,KAAMA,EACNC,aAAcA,EACdC,SAAUA,EACVC,QAASH,IAASiB,GAAejB,IAASmB,GAAenB,EAAKU,SAJzDV,EAAKO,WAUhB,mCACE,iCACE,wCACA,mBAAGH,UAAU,QAAb,SAAsBW,OAExB,qBAAKX,UAAU,WAAf,SACE,wBAAQI,QAASc,EAAjB,+B,MC3FVY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.357678d6.chunk.js","sourcesContent":["import './Card.scss';\r\n\r\nexport default function Card({ card, handleSelect, disabled, flipped}) {\r\n    \r\n    const handleClick = () => {\r\n        if(!disabled) {\r\n            handleSelect(card);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"card\">\r\n           <div className={flipped ? \"flipped\" : \"\"}>\r\n              <img className=\"front\" src={card.src} alt={`front of card id: ${card.id}`} />\r\n              <img className=\"back\" src=\"././photos/card.jpg\" alt=\"cover\" onClick={handleClick} />\r\n           </div> \r\n        </div>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport Card from './Card';\r\nimport './App.scss';\r\n\r\nconst cardImage = [\r\n  { \"src\": '/photos/1.png', matched: false },\r\n  { \"src\": '/photos/2.png', matched: false },\r\n  { \"src\": '/photos/3.png', matched: false },\r\n  { \"src\": '/photos/4.png', matched: false },\r\n  { \"src\": '/photos/5.png', matched: false },\r\n  { \"src\": '/photos/6.png', matched: false }\r\n];\r\n\r\nfunction App() {\r\n\r\n  const [cards, setCards] = useState([]);\r\n  const [steps, setSteps] = useState(0);\r\n  const [selectedOne, setSelectedOne] = useState(null);\r\n  const [selectedTwo, setSelectedTwo] = useState(null);\r\n  const [disabled, setDisabled] = useState(false);\r\n\r\n  // set new game\r\n  const shuffelCards = () => {\r\n    const shuffledCards = [...cardImage, ...cardImage]\r\n      .sort(() => Math.random() - 0.5)\r\n      .map(card => ({ ...card, id: Math.random() }))\r\n\r\n    setSelectedOne(null)\r\n    setSelectedTwo(null)\r\n    setCards(shuffledCards)\r\n    setSteps(0)\r\n  }\r\n\r\n  const handleSelect = (card) => {\r\n    console.log(card)\r\n    selectedOne ? setSelectedTwo(card) : setSelectedOne(card)    \r\n  }\r\n\r\n  // handle 2 selections\r\n  useEffect(() => {\r\n\r\n    if (selectedOne && selectedTwo) {\r\n        setDisabled(true)\r\n    \r\n        if (selectedOne.src === selectedTwo.src) {\r\n          selectedOne.matched = true;\r\n          selectedTwo.matched = true;\r\n          setCards(cards)\r\n          resetTurn()\r\n        } else {\r\n            setTimeout(() => resetTurn(), 1000)\r\n        }  \r\n    }\r\n  }, [selectedOne, selectedTwo, cards]);\r\n\r\n  // reset selection & count steps\r\n  const resetTurn = () => {\r\n    setSelectedOne(null)\r\n    setSelectedTwo(null)\r\n    setSteps(prevSteps => prevSteps + 1)\r\n    setDisabled(false)\r\n  }\r\n\r\n  // start new game\r\n  useEffect(() => {\r\n    shuffelCards()\r\n  }, [])\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n\r\n      <header>\r\n        <h2>Memory Game</h2>\r\n        <h4>React using Hooks</h4>\r\n      </header>\r\n\r\n      <div className=\"main\">\r\n        <div className=\"cards\">\r\n          {cards.map(card => (\r\n            <Card\r\n            key={card.id}\r\n            card={card}\r\n            handleSelect={handleSelect}\r\n            disabled={disabled}\r\n            flipped={card === selectedOne || card === selectedTwo || card.matched}\r\n            />\r\n            ))}\r\n        </div>\r\n      </div>\r\n\r\n      <footer>\r\n        <span>\r\n          <p>Steps: </p>\r\n          <p className=\"steps\">{steps}</p>\r\n        </span>\r\n        <div className=\"new-game\">\r\n          <button onClick={shuffelCards}>New Game</button>\r\n        </div>\r\n      </footer>\r\n           \r\n    </div>\r\n  );\r\n}\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}